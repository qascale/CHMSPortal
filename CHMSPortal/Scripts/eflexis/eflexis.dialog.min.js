(function e(t, n, r) { function u(e, t) { if (t != null && t != "") { e.title.html(t) } else { e.header.hide() } } function a(e, t, n, r, s) { e.btnok.html(t.text); t.visible == true ? e.btnok.show() : e.btnok.hide(); e.btnok.addClass(t.cssClass ? t.cssClass : i.confirmButton.cssClass); e.btncancel.html(n.text); n.visible == true ? e.btncancel.show() : e.btncancel.hide(); e.btncancel.addClass(n.cssClass ? n.cssClass : i.cancelButton.cssClass); e.btnok.click(function () { c(e, true, r, s) }); e.btncancel.click(function () { c(e, false, r, s) }) } function f(e, t) { if (t) { e.modal.addClass("fade") } else { e.modal.removeClass("fade") } } function l(e, n) { if (!n.enabled) { return false } if (!t.isEmptyObject(e.content.html())) { e.input.css("margin-top", "15px") } e.input.appendTo(e.controls); e.controls.appendTo(e.cgroup); e.cgroup.appendTo(e.content) } function c(e, n, r, i, s) { if (n && i && t.isEmptyObject(e.input.val())) { e.cgroup.addClass("error"); return false } var o = { confirmed: n, prompt: n ? e.input.val() : null, customValue: s, close: true }; var u = t.isFunction(r) && r(o) === false; if (o.close) { e.modal.modal("hide") } } var i = { animate: true, validatePrompt: false, cancelButton: { text: "Cancel", cssClass: "btn-danger" }, confirmButton: { text: "Yes", cssClass: "btn-primary" }, customButtons: { triggerCallback: false } }; var s = t("body"); var o = function () { this.modal = t('<div class="modal hide fade" tabindex="-1" role="dialog">'); this.header = t('<div class="modal-header"></div>'); this.title = t('<h3 id="modal-title"></h3>'); this.close = t('<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>'); this.content = t('<div class="modal-body"></div>'); this.footer = t('<div class="modal-footer"></div>'); this.btnok = t('<button class="btmodal-confirm btn">Ok</button>'); this.btncancel = t('<button class="btmodal-cancel btn" data-dismiss="modal">Cancel</button>'); this.input = t('<input type="text" autocomplete="off" class="prompt-input input-block-level"/>', {}); this.cgroup = t('<div class="control-group" />'); this.controls = t('<div class="controls" />'); this.init = function () { this.btncancel.appendTo(this.footer); this.btnok.appendTo(this.footer); this.close.appendTo(this.header); this.title.appendTo(this.header); this.header.appendTo(this.modal); this.content.appendTo(this.modal); this.footer.appendTo(this.modal) } }; var h = {}; h.setDefaults = function (e) { t.extend(true, i, e) }; h.show = function (e) { var n = { title: null, content: "Are you sure you want to continue?", contentUrl: null, callback: null, animate: i.animate, confirmButton: { text: i.confirmButton.text, cssClass: i.confirmButton.cssClass, visible: true }, cancelButton: { text: i.cancelButton.text, cssClass: i.cancelButton.cssClass, visible: true }, buttons: null, prompt: { enabled: false, required: i.validatePrompt } }; var h = t.extend(true, {}, n, e); var p = new o; p.init(); f(p, h.animate); u(p, h.title); p.modal.modal({ remote: h.contentUrl }); p.content.html(h.content); a(p, h.confirmButton, h.cancelButton, h.callback, h.prompt.required); l(p, h.prompt); if (h.buttons) { t.each(h.buttons, function (e, n) { var s = n.triggerCallback !== r ? n.triggerCallback : i.customButtons.triggerCallback; var o = t('<button class="btn"></button>').addClass(n.cssClass).html(n.text); t.isFunction(n.click) && o.click(n.click); if (h.callback && s) { o.click(function () { c(false, h.callback, h.prompt.required, n.value) }) } o.prependTo(p.footer) }) } p.modal.on("hidden", function () { return p.modal.remove() }); p.modal.appendTo(s).modal("show") }; h.alert = function (e, n) { var r = { title: null, buttonText: "Ok", callback: null, contentUrl: null, extraButtons: null }; var i = t.extend({}, r, n); h.show({ title: i.title, contentUrl: i.contentUrl, content: e, confirmButton: { text: i.buttonText }, cancelButton: { visible: false }, callback: i.callback, buttons: i.extraButtons }) }; h.confirm = function (e, n) { var r = { title: null, contentUrl: null, cancelButton: { text: "Cancel", cssClass: "btn-primary" }, confirmButton: { text: "Yes", cssClass: "btn-danger" }, callback: null, extraButtons: null }; var i = t.extend({}, r, n); eFlexis.dialog.show({ title: i.title, contentUrl: i.contentUrl, content: e, confirmButton: { text: i.confirmButton.text, cssClass: i.confirmButton.cssClass }, cancelButton: { text: i.cancelButton.text, cssClass: i.cancelButton.cssClass }, callback: i.callback, buttons: i.extraButtons }) }; h.prompt = function (e) { var n = { title: null, content: null, contentUrl: null, required: false, cancelButton: { text: "Cancel", cssClass: null }, confirmButton: { text: "Confirm", cssClass: "btn-primary" }, callback: null, extraButtons: null }; var r = t.extend({}, n, e); eFlexis.dialog.show({ title: r.title, contentUrl: r.contentUrl, content: r.content, confirmButton: { text: r.confirmButton.text, cssClass: r.confirmButton.cssClass }, cancelButton: { text: r.cancelButton.text, cssClass: r.cancelButton.cssClass }, callback: r.callback, buttons: r.extraButtons, prompt: { enabled: true, required: r.required } }) }; n.eFlexis = n.eFlexis || {}; n.eFlexis.dialog = h; h.init = function (r, i) { n.eFlexis.dialog = e(r || n, i || t) }; return h })(jQuery, window)